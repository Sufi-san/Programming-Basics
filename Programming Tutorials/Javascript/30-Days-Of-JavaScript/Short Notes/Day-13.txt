The browser console is mostly used for debugging tasks.

Useful console methods:

- .log() to show output
Can also be done by substitution (like C)
Eg: console.log('%d %s of JavaScript', 30, 'Days')
We can style logging message using css.
Eg:
console.log('%c30 Days Of JavaScript', 'color:green') // log output is green
console.log(
  '%c30 Days%c %cOf%c %cJavaScript%c',
  'color:green',
  '',
  'color:red',
  '',
  'color:yellow'
) // log output green red and yellow text

- .warn(), We use console.warn() to give warning on browser. For instance to inform or warn deprecation of version of a package or bad practices

- .error(), shows error messages

- .table(), display data as a table, works for arrays, objects, array of arrays, array of objects...

- .time(), starts timer, can be used to track duration of an operation. You give each timer a unique name, and may have up to 10,000 timers running on a given page. When you call console.timeEnd() with the same name, the browser will output the time, in milliseconds, that elapsed since the timer was started.
Eg: 
console.time('Time');
for(let i = 0; i < 100; i++) console.log(1);
console.timeEnd('Time');

- .info(), displays information message on console.

- .assert(), writes error message to console if assertion is false. If true, nothing happens.
Eg:
console.assert(4 > 3, '4 is greater than 3') // no result
console.assert(3 > 4, '3 is not greater than 4') // Assertion failed: 3 is not greater than 4
for (let i = 0; i <= 10; i += 1) {
  let errorMessage = `${i} is not even`
  console.log('the # is ' + i)
  console.assert(i % 2 === 0, { number: i, errorMessage: errorMessage })
}

- .group(), groups data in the console.
Eg:
const names = ['Asabeneh', 'Brook', 'David', 'John']
console.group('Names')
console.log(names)
console.groupEnd()

- .count(), It prints the number of times the console.count() is called. It takes a string label parameter. It is very helpful to count the number of times a function is called.
Eg:
const func = () => {
  console.count('Function has been called')
}
func()
func()
func()

- .clear(), clears the console.